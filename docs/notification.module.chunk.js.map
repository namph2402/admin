{"version":3,"sources":["./src/app/modules/notification/notification-create/notification-create.component.css","./src/app/modules/notification/notification-create/notification-create.component.html","./src/app/modules/notification/notification-create/notification-create.component.ts","./src/app/modules/notification/notification-edit/notification-edit.component.css","./src/app/modules/notification/notification-edit/notification-edit.component.html","./src/app/modules/notification/notification-edit/notification-edit.component.ts","./src/app/modules/notification/notification-list/notification-list.component.css","./src/app/modules/notification/notification-list/notification-list.component.html","./src/app/modules/notification/notification-list/notification-list.component.ts","./src/app/modules/notification/notification.meta.ts","./src/app/modules/notification/notification.module.ts","./src/app/modules/notification/notification.service.ts"],"names":[],"mappings":"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","file":"notification.module.chunk.js","sourcesContent":["module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/modules/notification/notification-create/notification-create.component.css\n// module id = ./src/app/modules/notification/notification-create/notification-create.component.css\n// module chunks = notification.module","module.exports = \"<div class=\\\"modal-header bg-primary\\\">\\r\\n  <h4 class=\\\"modal-title pull-left\\\">Thêm mới thông báo</h4>\\r\\n  <button (click)=\\\"dismiss()\\\" aria-label=\\\"Close\\\" class=\\\"close pull-right\\\" type=\\\"button\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-12\\\">\\r\\n      <form [formGroup]=\\\"formGroup\\\" novalidate>\\r\\n        <div *ngFor=\\\"let f of fields\\\" [ngClass]=\\\"{'has-error':!formGroup.controls[f.formControl].valid}\\\"\\r\\n             class=\\\"form-group\\\">\\r\\n          <ng-template [ngIf]=\\\"f.type=='input'\\\">\\r\\n            <label [for]=\\\"f.formControl\\\">\\r\\n              {{f.label}} <span\\r\\n              *ngIf=\\\"f.typeof == 'number'\\\" style=\\\"font-weight: normal\\\">\\r\\n              ( {{formGroup.controls[f.formControl].value|number:'1.0-0'}} )\\r\\n            </span>\\r\\n            </label>\\r\\n            <input [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\" [name]=\\\"f.formControl\\\" [placeholder]=\\\"f.placeHolder\\\"\\r\\n                   [type]=\\\"f.typeof\\\" class=\\\"form-control\\\">\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]=\\\"f.type=='textarea'\\\">\\r\\n            <label [for]=\\\"f.formControl\\\">\\r\\n              {{f.label}}\\r\\n            </label>\\r\\n            <textarea [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\" [name]=\\\"f.formControl\\\" [placeholder]=\\\"f.placeHolder\\\"\\r\\n                      [rows]=\\\"5\\\" class=\\\"form-control\\\">\\r\\n          </textarea>\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]=\\\"f.type=='file'\\\">\\r\\n            <label [for]=\\\"f.formControl\\\">\\r\\n              {{f.label}}\\r\\n            </label>\\r\\n            <input (change)=\\\"f.config['onFileChange'](formGroup,f.formControl,$event)\\\" [id]=\\\"f.formControl\\\" [name]=\\\"f.formControl\\\"\\r\\n                   [placeholder]=\\\"f.placeHolder\\\" accept=\\\"{{f.config['accept']}}\\\"\\r\\n                   class=\\\"form-control\\\"\\r\\n                   type=\\\"file\\\">\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]=\\\"f.type=='checkbox'\\\">\\r\\n            <div class=\\\"checkbox\\\">\\r\\n              <label>\\r\\n                <input [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\" [name]=\\\"f.formControl\\\" type=\\\"checkbox\\\">\\r\\n                {{f.label}}\\r\\n              </label>\\r\\n            </div>\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]=\\\"f.type=='select'\\\">\\r\\n            <label [for]=\\\"f.formControl\\\">\\r\\n              {{f.label}}\\r\\n            </label>\\r\\n            <select [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\" class=\\\"form-control\\\">\\r\\n              <option *ngFor=\\\"let option of f.data\\\" [value]=\\\"option['id']\\\">{{option['name']}}</option>\\r\\n            </select>\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]=\\\"f.type=='select2'\\\">\\r\\n            <label [for]=\\\"f.formControl\\\">\\r\\n              {{f.label}}\\r\\n            </label>\\r\\n            <angular2-multiselect [data]=\\\"f.data\\\" [formControlName]=\\\"f.formControl\\\"\\r\\n                                  [id]=\\\"f.formControl\\\" [settings]=\\\"f.config\\\">\\r\\n            </angular2-multiselect>\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]=\\\"f.type=='html'\\\">\\r\\n            <label [for]=\\\"f.formControl\\\">\\r\\n              {{f.label}}\\r\\n            </label>\\r\\n            <ckeditor [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\"\\r\\n                      debounce=\\\"500\\\">\\r\\n            </ckeditor>\\r\\n          </ng-template>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n  <button (click)=\\\"create()\\\" [disabled]=\\\"!formGroup.valid\\\" class=\\\"btn btn-primary\\\" type=\\\"button\\\">Thêm mới</button>\\r\\n  <button (click)=\\\"dismiss()\\\" class=\\\"btn btn-default\\\" type=\\\"button\\\">Hủy bỏ</button>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/modules/notification/notification-create/notification-create.component.html\n// module id = ./src/app/modules/notification/notification-create/notification-create.component.html\n// module chunks = notification.module","import {Component} from '@angular/core';\r\nimport {AbstractModalComponent} from '../../../core/crud';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {BsModalRef} from 'ngx-bootstrap';\r\nimport {NotificationService} from '../notification.service';\r\nimport {NotificationMeta} from '../notification.meta';\r\nimport {FieldForm} from '../../../core/common';\r\n\r\n@Component({\r\n  selector: 'app-notification-create',\r\n  templateUrl: './notification-create.component.html',\r\n  styleUrls: ['./notification-create.component.css'],\r\n  providers: [NotificationService]\r\n})\r\nexport class NotificationCreateComponent extends AbstractModalComponent<NotificationMeta> {\r\n\r\n  constructor(\r\n    service: NotificationService,\r\n    modal: BsModalRef,\r\n    builder: FormBuilder\r\n  ) {\r\n    super(service, modal, builder);\r\n  }\r\n\r\n  onInit(): void {\r\n  }\r\n\r\n  onDestroy(): void {\r\n  }\r\n\r\n  buildForm(): FormGroup {\r\n    return this.formBuilder.group({\r\n      name: new FormControl(null, [Validators.required, Validators.maxLength(255), Validators.pattern('[^ ].*$')]),\r\n      content: new FormControl(null, [Validators.required]),\r\n    });\r\n  }\r\n\r\n  initFieldForm(): FieldForm[] {\r\n    return [\r\n      FieldForm.createTextInput('Tên', 'name', 'Nhập tên'),\r\n      FieldForm.createHtmlInput('Nội dung', 'content', {height: '300px'}),\r\n    ];\r\n  }\r\n\r\n  loaded(): void {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/modules/notification/notification-create/notification-create.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/modules/notification/notification-edit/notification-edit.component.css\n// module id = ./src/app/modules/notification/notification-edit/notification-edit.component.css\n// module chunks = notification.module","module.exports = \"<div class=\\\"modal-header bg-primary\\\">\\r\\n  <h4 class=\\\"modal-title pull-left\\\">Chỉnh sửa thông báo</h4>\\r\\n  <button (click)=\\\"dismiss()\\\" aria-label=\\\"Close\\\" class=\\\"close pull-right\\\" type=\\\"button\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-12\\\">\\r\\n      <form [formGroup]=\\\"formGroup\\\" novalidate>\\r\\n        <div *ngFor=\\\"let f of fields\\\" [ngClass]=\\\"{'has-error':!formGroup.controls[f.formControl].valid}\\\"\\r\\n             class=\\\"form-group\\\">\\r\\n          <ng-template [ngIf]=\\\"f.type=='input'\\\">\\r\\n            <label [for]=\\\"f.formControl\\\">\\r\\n              {{f.label}} <span\\r\\n              *ngIf=\\\"f.typeof == 'number'\\\" style=\\\"font-weight: normal\\\">\\r\\n              ( {{formGroup.controls[f.formControl].value|number:'1.0-0'}} )\\r\\n            </span>\\r\\n            </label>\\r\\n            <input [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\" [name]=\\\"f.formControl\\\" [placeholder]=\\\"f.placeHolder\\\"\\r\\n                   [type]=\\\"f.typeof\\\" class=\\\"form-control\\\">\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]=\\\"f.type=='textarea'\\\">\\r\\n            <label [for]=\\\"f.formControl\\\">\\r\\n              {{f.label}}\\r\\n            </label>\\r\\n            <textarea [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\" [name]=\\\"f.formControl\\\" [placeholder]=\\\"f.placeHolder\\\"\\r\\n                      [rows]=\\\"5\\\" class=\\\"form-control\\\">\\r\\n          </textarea>\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]=\\\"f.type=='file'\\\">\\r\\n            <label [for]=\\\"f.formControl\\\">\\r\\n              {{f.label}}\\r\\n            </label>\\r\\n            <input (change)=\\\"f.config['onFileChange'](formGroup,f.formControl,$event)\\\" [id]=\\\"f.formControl\\\" [name]=\\\"f.formControl\\\"\\r\\n                   [placeholder]=\\\"f.placeHolder\\\" accept=\\\"{{f.config['accept']}}\\\"\\r\\n                   class=\\\"form-control\\\"\\r\\n                   type=\\\"file\\\">\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]=\\\"f.type=='checkbox'\\\">\\r\\n            <div class=\\\"checkbox\\\">\\r\\n              <label>\\r\\n                <input [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\" [name]=\\\"f.formControl\\\" type=\\\"checkbox\\\">\\r\\n                {{f.label}}\\r\\n              </label>\\r\\n            </div>\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]=\\\"f.type=='select'\\\">\\r\\n            <label [for]=\\\"f.formControl\\\">\\r\\n              {{f.label}}\\r\\n            </label>\\r\\n            <select [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\" class=\\\"form-control\\\">\\r\\n              <option *ngFor=\\\"let option of f.data\\\" [value]=\\\"option['id']\\\">{{option['name']}}</option>\\r\\n            </select>\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]=\\\"f.type=='select2'\\\">\\r\\n            <label [for]=\\\"f.formControl\\\">\\r\\n              {{f.label}}\\r\\n            </label>\\r\\n            <angular2-multiselect [data]=\\\"f.data\\\" [formControlName]=\\\"f.formControl\\\"\\r\\n                                  [id]=\\\"f.formControl\\\" [settings]=\\\"f.config\\\">\\r\\n            </angular2-multiselect>\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]=\\\"f.type=='html'\\\">\\r\\n            <label [for]=\\\"f.formControl\\\">\\r\\n              {{f.label}}\\r\\n            </label>\\r\\n            <ckeditor [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\"\\r\\n                      debounce=\\\"500\\\">\\r\\n            </ckeditor>\\r\\n          </ng-template>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n  <button (click)=\\\"edit()\\\" [disabled]=\\\"!formGroup.valid\\\" class=\\\"btn btn-primary\\\" type=\\\"button\\\">Sửa</button>\\r\\n  <button (click)=\\\"dismiss()\\\" class=\\\"btn btn-default\\\" type=\\\"button\\\">Hủy bỏ</button>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/modules/notification/notification-edit/notification-edit.component.html\n// module id = ./src/app/modules/notification/notification-edit/notification-edit.component.html\n// module chunks = notification.module","import {Component} from '@angular/core';\r\nimport {AbstractModalComponent} from '../../../core/crud';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {BsModalRef} from 'ngx-bootstrap';\r\nimport {NotificationMeta} from '../notification.meta';\r\nimport {NotificationService} from '../notification.service';\r\nimport {FieldForm} from '../../../core/common';\r\n\r\n@Component({\r\n  selector: 'app-notification-edit',\r\n  templateUrl: './notification-edit.component.html',\r\n  styleUrls: ['./notification-edit.component.css'],\r\n  providers: [NotificationService]\r\n})\r\nexport class NotificationEditComponent extends AbstractModalComponent<NotificationMeta> {\r\n\r\n  constructor(\r\n    service: NotificationService,\r\n    modal: BsModalRef,\r\n    builder: FormBuilder\r\n  ) {\r\n    super(service, modal, builder);\r\n  }\r\n\r\n  onInit(): void {\r\n  }\r\n\r\n  onDestroy(): void {\r\n  }\r\n\r\n  buildForm(): FormGroup {\r\n    return this.formBuilder.group({\r\n      name: new FormControl(null, [Validators.required, Validators.maxLength(255), Validators.pattern('[^ ].*$')]),\r\n      content: new FormControl(null, [Validators.required]),\r\n    });\r\n  }\r\n\r\n  initFieldForm(): FieldForm[] {\r\n    return [\r\n      FieldForm.createTextInput('Tên', 'name', 'Nhập tên'),\r\n      FieldForm.createHtmlInput('Nội dung', 'content', {height: '300px'}),\r\n    ];\r\n  }\r\n\r\n  loaded(): void {\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/modules/notification/notification-edit/notification-edit.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/modules/notification/notification-list/notification-list.component.css\n// module id = ./src/app/modules/notification/notification-list/notification-list.component.css\n// module chunks = notification.module","module.exports = \"<div class=\\\"panel panel-default\\\">\\r\\n  <div class=\\\"panel-heading\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n        <form (ngSubmit)=\\\"load()\\\" [formGroup]=\\\"searchForm\\\">\\r\\n          <div *ngFor=\\\"let f of searchControls\\\" class=\\\"form-group col-md-6\\\">\\r\\n            <ng-template [ngIf]=\\\"f.type == 'input'\\\">\\r\\n              <label [for]=\\\"f.formControl\\\">\\r\\n                {{ f.label }}\\r\\n              </label>\\r\\n              <input [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\" [name]=\\\"f.formControl\\\"\\r\\n                [placeholder]=\\\"f.placeHolder\\\" [type]=\\\"f.typeof\\\" class=\\\"form-control\\\" />\\r\\n            </ng-template>\\r\\n            <ng-template [ngIf]=\\\"f.type == 'textarea'\\\">\\r\\n              <label [for]=\\\"f.formControl\\\">\\r\\n                {{ f.label }}\\r\\n              </label>\\r\\n              <textarea [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\" [name]=\\\"f.formControl\\\"\\r\\n                [placeholder]=\\\"f.placeHolder\\\" class=\\\"form-control\\\">\\r\\n              </textarea>\\r\\n            </ng-template>\\r\\n            <ng-template [ngIf]=\\\"f.type == 'checkbox'\\\">\\r\\n              <div class=\\\"checkbox\\\">\\r\\n                <label>\\r\\n                  <input [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\" [name]=\\\"f.formControl\\\"\\r\\n                    type=\\\"checkbox\\\" />\\r\\n                  {{ f.label }}\\r\\n                </label>\\r\\n              </div>\\r\\n            </ng-template>\\r\\n            <ng-template [ngIf]=\\\"f.type == 'select'\\\">\\r\\n              <label [for]=\\\"f.formControl\\\">\\r\\n                {{ f.label }}\\r\\n              </label>\\r\\n              <select [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\" [name]=\\\"f.formControl\\\"\\r\\n                class=\\\"form-control\\\">\\r\\n                <option *ngFor=\\\"let option of f.data\\\" [value]=\\\"option['value']\\\">\\r\\n                  {{ option[\\\"name\\\"] }}\\r\\n                </option>\\r\\n              </select>\\r\\n            </ng-template>\\r\\n            <ng-template [ngIf]=\\\"f.type == 'select2'\\\">\\r\\n              <label [for]=\\\"f.formControl\\\">\\r\\n                {{ f.label }}\\r\\n              </label>\\r\\n              <angular2-multiselect [data]=\\\"f.data\\\" [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\"\\r\\n                [settings]=\\\"f.config\\\">\\r\\n              </angular2-multiselect>\\r\\n            </ng-template>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <button class=\\\"btn btn-default\\\" type=\\\"submit\\\">Tìm kiếm</button>\\r\\n            <button (click)=\\\"removeFilter()\\\" class=\\\"btn btn-default\\\" type=\\\"button\\\">Xóa lọc</button>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"col-xs-6 col-xs-offset-6\\\">\\r\\n        <button (click)=\\\"createNotification()\\\" class=\\\"btn btn-primary btn-sm pull-right\\\" type=\\\"button\\\">\\r\\n          <i class=\\\"fa fa-plus\\\"></i> Thêm mới\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <table class=\\\"table table-bordered table-hover\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th style=\\\"width: 10%;\\\">#</th>\\r\\n        <th style=\\\"width: 60;\\\">Tên</th>\\r\\n        <th style=\\\"width: 20%;\\\">Trạng thái</th>\\r\\n        <th style=\\\"width: 10%;\\\">Thao tác</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let item of list;let i = index\\\" class=\\\"odd\\\">\\r\\n        <td class=\\\"text-center\\\">{{i + 1}}</td>\\r\\n        <td>{{item.name}}</td>\\r\\n        <td class=\\\"text-center\\\">\\r\\n          <ui-switch (change)=\\\"onStatusChange(item,i,$event)\\\" *ngIf=\\\"item.status == 0\\\"></ui-switch>\\r\\n          <ui-switch (change)=\\\"onStatusChange(item,i,$event)\\\" *ngIf=\\\"item.status == 1\\\"\\r\\n            [checked]=\\\"item.status\\\"></ui-switch>\\r\\n        </td>\\r\\n        <td class=\\\"text-center\\\">\\r\\n          <button (click)=\\\"editNotification(item)\\\" class=\\\"btn btn-default btn-sm\\\" type=\\\"button\\\" style=\\\"width: 30px; height: 30px; padding: 0;\\\">\\r\\n            <i class=\\\"fa fa-pencil-square-o\\\"></i>\\r\\n          </button>\\r\\n          <button (confirm)=\\\"remove(item, i)\\\" cancelText=\\\"No <i class='fa fa-remove'></i>\\\" class=\\\"btn btn-danger btn-sm\\\"\\r\\n            confirmText=\\\"Yes <i class='fa fa-check'></i>\\\" mwlConfirmationPopover placement=\\\"top\\\"\\r\\n            popoverMessage=\\\"Bạn thực sự muốn xóa?\\\" popoverTitle=\\\"Xóa\\\" style=\\\"width: 30px; height: 30px; padding: 0;\\\" type=\\\"button\\\">\\r\\n            <i aria-hidden=\\\"true\\\" class=\\\"fa fa-remove\\\"></i>\\r\\n          </button>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n  <div *ngIf=\\\"list.length > 0\\\" class=\\\"panel-footer\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-6\\\">\\r\\n        <pagination (numPages)=\\\"pagination.numPages = $event\\\" (pageChanged)=\\\"pageChanged($event)\\\"\\r\\n          [(ngModel)]=\\\"pagination.currentPage\\\" [boundaryLinks]=\\\"true\\\" [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\r\\n          [maxSize]=\\\"pagination.maxSize\\\" [totalItems]=\\\"pagination.totalItems\\\" class=\\\"pagination-sm\\\"></pagination>\\r\\n      </div>\\r\\n      <div class=\\\"col-xs-6\\\">\\r\\n        <div class=\\\"box-go-to\\\">\\r\\n          <input [(ngModel)]=\\\"nextPage\\\" class=\\\"col-xs-2\\\" type=\\\"number\\\">\\r\\n          <span class=\\\"col-xs-1\\\">/</span>\\r\\n          <input [(ngModel)]=\\\"pagination.numPages\\\" class=\\\"col-xs-2\\\" disabled type=\\\"text\\\">\\r\\n          <div class=\\\"col-xs-4\\\">\\r\\n            <button (click)=\\\"goToPageNumber()\\\">Đến</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/modules/notification/notification-list/notification-list.component.html\n// module id = ./src/app/modules/notification/notification-list/notification-list.component.html\n// module chunks = notification.module","import {Component} from '@angular/core';\r\nimport {AbstractCRUDComponent, AbstractModalComponent} from '../../../core/crud';\r\nimport {BsModalService, ModalOptions} from 'ngx-bootstrap';\r\nimport {FormBuilder, FormControl, FormGroup} from '@angular/forms';\r\nimport {NotificationMeta} from '../notification.meta';\r\nimport {NotificationService} from '../notification.service';\r\nimport {NotificationCreateComponent} from '../notification-create/notification-create.component';\r\nimport {NotificationEditComponent} from '../notification-edit/notification-edit.component';\r\nimport {FieldForm, ModalResult, ObjectUtil} from '../../../core';\r\n\r\n@Component({\r\n  selector: 'app-notification',\r\n  templateUrl: './notification-list.component.html',\r\n  styleUrls: ['./notification-list.component.css'],\r\n  providers: [NotificationService]\r\n})\r\nexport class NotificationListComponent extends AbstractCRUDComponent<NotificationMeta> {\r\n\r\n  constructor(\r\n    service: NotificationService,\r\n    modal: BsModalService,\r\n    builder: FormBuilder,\r\n  ) {\r\n    super(service, modal, builder);\r\n  }\r\n\r\n  onInit(): void {\r\n    this.load();\r\n  }\r\n\r\n  onDestroy(): void {\r\n  }\r\n\r\n  getTitle(): string {\r\n    return 'Quản lý khách hàng';\r\n  }\r\n\r\n  getCreateModalComponent(): any {\r\n    return NotificationCreateComponent;\r\n  }\r\n\r\n  getEditModalComponent(): any {\r\n    return NotificationEditComponent;\r\n  }\r\n\r\n  getCreateModalComponentOptions(): ModalOptions {\r\n    return null;\r\n  }\r\n\r\n  getEditModalComponentOptions(): ModalOptions {\r\n    return null;\r\n  }\r\n\r\n  buildSearchForm(): FormGroup {\r\n    return this.formBuilder.group({\r\n      search: new FormControl(null),\r\n      status: new FormControl(null),\r\n    });\r\n  }\r\n\r\n  initSearchForm(): FieldForm[] {\r\n    return [\r\n      FieldForm.createTextInput('Tìm kiếm theo tên', 'search', 'Nhập từ khóa'),\r\n      FieldForm.createSelect('Tìm kiếm trạng thái', 'status', 'Chọn một', [\r\n        {\r\n          id: 1,\r\n          name: 'Hoạt động',\r\n          value: '1'\r\n        },\r\n        {\r\n          id: 0,\r\n          name: 'Không hoạt động',\r\n          value: '0'\r\n        },\r\n      ]),\r\n    ];\r\n  }\r\n\r\n  initNewModel(): NotificationMeta {\r\n    return new NotificationMeta();\r\n  }\r\n\r\n  onStatusChange(item: NotificationMeta, index: number, enable: boolean) {\r\n    let methodAsync = null;\r\n    let titleMsg: string = 'Phát hành';\r\n    if (enable) {\r\n      methodAsync = this.service.enable(item.id);\r\n    } else {\r\n      methodAsync = this.service.disable(item.id);\r\n      titleMsg = 'Lưu kho';\r\n    }\r\n    methodAsync.subscribe((res: NotificationMeta) => {\r\n      this.service.toastSuccessfully(titleMsg);\r\n    }, () => this.service.toastFailed(titleMsg));\r\n    this.load();\r\n  }\r\n\r\n  createNotification() {\r\n    let modalOptions = Object.assign(this.defaultModalOptions(), this.getCreateModalComponentOptions());\r\n    const config = ObjectUtil.combineValue({ignoreBackdropClick: true}, modalOptions);\r\n    const modalRef = this.modalService.show(this.getCreateModalComponent(), config);\r\n    let modal: AbstractModalComponent<NotificationMeta> = <AbstractModalComponent<NotificationMeta>>modalRef.content;\r\n    modal.setModel(this.initNewModel());\r\n    modal.onHidden.subscribe((result: ModalResult<NotificationMeta>) => {\r\n      if (result.success) {\r\n        this.load();\r\n      }\r\n    });\r\n  }\r\n\r\n  editNotification(item) {\r\n    let modalOptions = Object.assign(this.defaultModalOptions(), this.getEditModalComponentOptions());\r\n    const config = ObjectUtil.combineValue({ignoreBackdropClick: true}, modalOptions);\r\n    const modalRef = this.modalService.show(this.getEditModalComponent(), config);\r\n    let modal: AbstractModalComponent<NotificationMeta> = <AbstractModalComponent<NotificationMeta>>modalRef.content;\r\n    modal.setModel(item);\r\n    modal.onHidden.subscribe((result: ModalResult<NotificationMeta>) => {\r\n      if (result.success) {\r\n        this.load();\r\n      }\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/modules/notification/notification-list/notification-list.component.ts","export class NotificationMeta {\r\n  id: number;\r\n  name: string;\r\n  content: string;\r\n  status: boolean;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/modules/notification/notification.meta.ts","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NotificationListComponent} from './notification-list/notification-list.component';\r\nimport {NotificationCreateComponent} from './notification-create/notification-create.component';\r\nimport {NotificationEditComponent} from './notification-edit/notification-edit.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {ModalModule, PaginationModule, PopoverModule} from 'ngx-bootstrap';\r\nimport {ConfirmationPopoverModule} from 'angular-confirmation-popover';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {NgSelectModule} from '@ng-select/ng-select';\r\nimport {CKEditorModule} from 'ng2-ckeditor';\r\nimport {AngularMultiSelectModule} from 'angular2-multiselect-dropdown';\r\nimport {UiSwitchModule} from 'ngx-toggle-switch';\r\n\r\nconst routing: Routes = [\r\n  {\r\n    path: '',\r\n    component: NotificationListComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    PaginationModule.forRoot(),\r\n    ReactiveFormsModule,\r\n    PopoverModule.forRoot(),\r\n    ConfirmationPopoverModule.forRoot(),\r\n    RouterModule.forChild(routing),\r\n    ModalModule.forRoot(),\r\n    NgSelectModule,\r\n    CKEditorModule,\r\n    UiSwitchModule,\r\n    AngularMultiSelectModule,\r\n  ],\r\n  declarations: [NotificationListComponent, NotificationCreateComponent, NotificationEditComponent],\r\n  entryComponents: [NotificationCreateComponent, NotificationEditComponent]\r\n})\r\nexport class NotificationModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/modules/notification/notification.module.ts","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {AbstractCRUDService} from '../../core/crud';\r\nimport {ToasterService} from 'angular2-toaster';\r\nimport {TitleService} from '../../core/services';\r\nimport {NotificationMeta} from './notification.meta';\r\n\r\n@Injectable()\r\nexport class NotificationService extends AbstractCRUDService<NotificationMeta> {\r\n\r\n  constructor(http: HttpClient, toaster: ToasterService, title: TitleService) {\r\n    super(http, title, toaster, 'thông báo', 'notifications');\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/modules/notification/notification.service.ts"],"sourceRoot":"webpack:///"}