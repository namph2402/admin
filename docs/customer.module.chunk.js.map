{"version":3,"sources":["./src/app/modules/customer/customer-create/customer-create.component.css","./src/app/modules/customer/customer-create/customer-create.component.html","./src/app/modules/customer/customer-create/customer-create.component.ts","./src/app/modules/customer/customer-edit/customer-edit.component.css","./src/app/modules/customer/customer-edit/customer-edit.component.html","./src/app/modules/customer/customer-edit/customer-edit.component.ts","./src/app/modules/customer/customer-list/customer-list.component.css","./src/app/modules/customer/customer-list/customer-list.component.html","./src/app/modules/customer/customer-list/customer-list.component.ts","./src/app/modules/customer/customer.meta.ts","./src/app/modules/customer/customer.module.ts"],"names":[],"mappings":"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","file":"customer.module.chunk.js","sourcesContent":["module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/modules/customer/customer-create/customer-create.component.css\n// module id = ./src/app/modules/customer/customer-create/customer-create.component.css\n// module chunks = customer.module","module.exports = \"<div class=\\\"modal-header bg-primary\\\">\\r\\n  <h4 class=\\\"modal-title pull-left\\\">Thêm mới khách hàng</h4>\\r\\n  <button (click)=\\\"dismiss()\\\" aria-label=\\\"Close\\\" class=\\\"close pull-right\\\" type=\\\"button\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-12\\\">\\r\\n      <form [formGroup]=\\\"formGroup\\\" novalidate>\\r\\n        <div *ngFor=\\\"let f of fields\\\" [ngClass]=\\\"{'has-error':!formGroup.controls[f.formControl].valid}\\\"\\r\\n             class=\\\"form-group\\\">\\r\\n          <ng-template [ngIf]=\\\"f.type=='input'\\\">\\r\\n            <label [for]=\\\"f.formControl\\\">\\r\\n              {{f.label}} <span\\r\\n              *ngIf=\\\"f.typeof == 'number'\\\" style=\\\"font-weight: normal\\\">\\r\\n              ( {{formGroup.controls[f.formControl].value|number:'1.0-0'}} )\\r\\n            </span>\\r\\n            </label>\\r\\n            <input [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\" [name]=\\\"f.formControl\\\" [placeholder]=\\\"f.placeHolder\\\"\\r\\n                   [type]=\\\"f.typeof\\\" class=\\\"form-control\\\">\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]=\\\"f.type=='textarea'\\\">\\r\\n            <label [for]=\\\"f.formControl\\\">\\r\\n              {{f.label}}\\r\\n            </label>\\r\\n            <textarea [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\" [name]=\\\"f.formControl\\\" [placeholder]=\\\"f.placeHolder\\\"\\r\\n                      [rows]=\\\"5\\\" class=\\\"form-control\\\">\\r\\n          </textarea>\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]=\\\"f.type=='file'\\\">\\r\\n            <label [for]=\\\"f.formControl\\\">\\r\\n              {{f.label}}\\r\\n            </label>\\r\\n            <input (change)=\\\"f.config['onFileChange'](formGroup,f.formControl,$event)\\\" [id]=\\\"f.formControl\\\" [name]=\\\"f.formControl\\\"\\r\\n                   [placeholder]=\\\"f.placeHolder\\\" accept=\\\"{{f.config['accept']}}\\\"\\r\\n                   class=\\\"form-control\\\"\\r\\n                   type=\\\"file\\\">\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]=\\\"f.type=='checkbox'\\\">\\r\\n            <div class=\\\"checkbox\\\">\\r\\n              <label>\\r\\n                <input [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\" [name]=\\\"f.formControl\\\" type=\\\"checkbox\\\">\\r\\n                {{f.label}}\\r\\n              </label>\\r\\n            </div>\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]=\\\"f.type=='select'\\\">\\r\\n            <label [for]=\\\"f.formControl\\\">\\r\\n              {{f.label}}\\r\\n            </label>\\r\\n            <select [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\" class=\\\"form-control\\\">\\r\\n              <option *ngFor=\\\"let option of f.data\\\" [value]=\\\"option['id']\\\">{{option['name']}}</option>\\r\\n            </select>\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]=\\\"f.type=='select2'\\\">\\r\\n            <label [for]=\\\"f.formControl\\\">\\r\\n              {{f.label}}\\r\\n            </label>\\r\\n            <angular2-multiselect [data]=\\\"f.data\\\" [formControlName]=\\\"f.formControl\\\"\\r\\n                                  [id]=\\\"f.formControl\\\" [settings]=\\\"f.config\\\">\\r\\n            </angular2-multiselect>\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]=\\\"f.type=='html'\\\">\\r\\n            <label [for]=\\\"f.formControl\\\">\\r\\n              {{f.label}}\\r\\n            </label>\\r\\n            <ckeditor [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\"\\r\\n                      debounce=\\\"500\\\">\\r\\n            </ckeditor>\\r\\n          </ng-template>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n  <button (click)=\\\"create()\\\" [disabled]=\\\"!formGroup.valid\\\" class=\\\"btn btn-primary\\\" type=\\\"button\\\">Thêm mới</button>\\r\\n  <button (click)=\\\"dismiss()\\\" class=\\\"btn btn-default\\\" type=\\\"button\\\">Hủy bỏ</button>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/modules/customer/customer-create/customer-create.component.html\n// module id = ./src/app/modules/customer/customer-create/customer-create.component.html\n// module chunks = customer.module","import {Component} from '@angular/core';\r\nimport {AbstractModalComponent} from '../../../core/crud';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {BsModalRef} from 'ngx-bootstrap';\r\nimport {CustomerService} from '../customer.service';\r\nimport {CustomerMeta} from '../customer.meta';\r\nimport {FieldForm} from '../../../core/common';\r\n\r\n@Component({\r\n  selector: 'app-customer-create',\r\n  templateUrl: './customer-create.component.html',\r\n  styleUrls: ['./customer-create.component.css'],\r\n  providers: [CustomerService]\r\n})\r\nexport class CustomerCreateComponent extends AbstractModalComponent<CustomerMeta> {\r\n\r\n  constructor(\r\n    service: CustomerService,\r\n    modal: BsModalRef,\r\n    builder: FormBuilder\r\n  ) {\r\n    super(service, modal, builder);\r\n  }\r\n\r\n  onInit(): void {\r\n  }\r\n\r\n  onDestroy(): void {\r\n  }\r\n\r\n  buildForm(): FormGroup {\r\n    return this.formBuilder.group({\r\n      name: new FormControl(null, [Validators.required, Validators.maxLength(255), Validators.pattern('[^ ].*$')]),\r\n      value: new FormControl(null, [Validators.required, Validators.maxLength(255), Validators.pattern('[^ ].*$')]),\r\n    });\r\n  }\r\n\r\n  initFieldForm(): FieldForm[] {\r\n    return [\r\n      FieldForm.createTextInput('Tên', 'name', 'Nhập tên'),\r\n      FieldForm.createTextInput('Giá trị', 'value', 'Nhập giá trị'),\r\n    ];\r\n  }\r\n\r\n  loaded(): void {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/modules/customer/customer-create/customer-create.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/modules/customer/customer-edit/customer-edit.component.css\n// module id = ./src/app/modules/customer/customer-edit/customer-edit.component.css\n// module chunks = customer.module","module.exports = \"<div class=\\\"modal-header bg-primary\\\">\\r\\n  <h4 class=\\\"modal-title pull-left\\\">Chỉnh sửa khách hàng</h4>\\r\\n  <button (click)=\\\"dismiss()\\\" aria-label=\\\"Close\\\" class=\\\"close pull-right\\\" type=\\\"button\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-12\\\">\\r\\n      <form [formGroup]=\\\"formGroup\\\" novalidate>\\r\\n        <div *ngFor=\\\"let f of fields\\\" [ngClass]=\\\"{'has-error':!formGroup.controls[f.formControl].valid}\\\"\\r\\n             class=\\\"form-group\\\">\\r\\n          <ng-template [ngIf]=\\\"f.type=='input'\\\">\\r\\n            <label [for]=\\\"f.formControl\\\">\\r\\n              {{f.label}} <span\\r\\n              *ngIf=\\\"f.typeof == 'number'\\\" style=\\\"font-weight: normal\\\">\\r\\n              ( {{formGroup.controls[f.formControl].value|number:'1.0-0'}} )\\r\\n            </span>\\r\\n            </label>\\r\\n            <input [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\" [name]=\\\"f.formControl\\\" [placeholder]=\\\"f.placeHolder\\\"\\r\\n                   [type]=\\\"f.typeof\\\" class=\\\"form-control\\\">\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]=\\\"f.type=='textarea'\\\">\\r\\n            <label [for]=\\\"f.formControl\\\">\\r\\n              {{f.label}}\\r\\n            </label>\\r\\n            <textarea [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\" [name]=\\\"f.formControl\\\" [placeholder]=\\\"f.placeHolder\\\"\\r\\n                      [rows]=\\\"5\\\" class=\\\"form-control\\\">\\r\\n          </textarea>\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]=\\\"f.type=='file'\\\">\\r\\n            <label [for]=\\\"f.formControl\\\">\\r\\n              {{f.label}}\\r\\n            </label>\\r\\n            <input (change)=\\\"f.config['onFileChange'](formGroup,f.formControl,$event)\\\" [id]=\\\"f.formControl\\\" [name]=\\\"f.formControl\\\"\\r\\n                   [placeholder]=\\\"f.placeHolder\\\" accept=\\\"{{f.config['accept']}}\\\"\\r\\n                   class=\\\"form-control\\\"\\r\\n                   type=\\\"file\\\">\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]=\\\"f.type=='checkbox'\\\">\\r\\n            <div class=\\\"checkbox\\\">\\r\\n              <label>\\r\\n                <input [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\" [name]=\\\"f.formControl\\\" type=\\\"checkbox\\\">\\r\\n                {{f.label}}\\r\\n              </label>\\r\\n            </div>\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]=\\\"f.type=='select'\\\">\\r\\n            <label [for]=\\\"f.formControl\\\">\\r\\n              {{f.label}}\\r\\n            </label>\\r\\n            <select [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\" class=\\\"form-control\\\">\\r\\n              <option *ngFor=\\\"let option of f.data\\\" [value]=\\\"option['id']\\\">{{option['name']}}</option>\\r\\n            </select>\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]=\\\"f.type=='select2'\\\">\\r\\n            <label [for]=\\\"f.formControl\\\">\\r\\n              {{f.label}}\\r\\n            </label>\\r\\n            <angular2-multiselect [data]=\\\"f.data\\\" [formControlName]=\\\"f.formControl\\\"\\r\\n                                  [id]=\\\"f.formControl\\\" [settings]=\\\"f.config\\\">\\r\\n            </angular2-multiselect>\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]=\\\"f.type=='html'\\\">\\r\\n            <label [for]=\\\"f.formControl\\\">\\r\\n              {{f.label}}\\r\\n            </label>\\r\\n            <ckeditor [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\"\\r\\n                      debounce=\\\"500\\\">\\r\\n            </ckeditor>\\r\\n          </ng-template>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n  <button (click)=\\\"edit()\\\" [disabled]=\\\"!formGroup.valid\\\" class=\\\"btn btn-primary\\\" type=\\\"button\\\">Sửa</button>\\r\\n  <button (click)=\\\"dismiss()\\\" class=\\\"btn btn-default\\\" type=\\\"button\\\">Hủy bỏ</button>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/modules/customer/customer-edit/customer-edit.component.html\n// module id = ./src/app/modules/customer/customer-edit/customer-edit.component.html\n// module chunks = customer.module","import {Component} from '@angular/core';\r\nimport {AbstractModalComponent} from '../../../core/crud';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {BsModalRef} from 'ngx-bootstrap';\r\nimport {CustomerMeta} from '../customer.meta';\r\nimport {CustomerService} from '../customer.service';\r\nimport {FieldForm} from '../../../core/common';\r\n\r\n@Component({\r\n  selector: 'app-customer-edit',\r\n  templateUrl: './customer-edit.component.html',\r\n  styleUrls: ['./customer-edit.component.css'],\r\n  providers: [CustomerService]\r\n})\r\nexport class CustomerEditComponent extends AbstractModalComponent<CustomerMeta> {\r\n\r\n  constructor(\r\n    service: CustomerService,\r\n    modal: BsModalRef,\r\n    builder: FormBuilder\r\n  ) {\r\n    super(service, modal, builder);\r\n  }\r\n\r\n  onInit(): void {\r\n  }\r\n\r\n  onDestroy(): void {\r\n  }\r\n\r\n  buildForm(): FormGroup {\r\n    return this.formBuilder.group({\r\n      name: new FormControl(null, [Validators.required, Validators.maxLength(255), Validators.pattern('[^ ].*$')]),\r\n      value: new FormControl(null, [Validators.required, Validators.maxLength(255), Validators.pattern('[^ ].*$')]),\r\n    });\r\n  }\r\n\r\n  initFieldForm(): FieldForm[] {\r\n    return [\r\n      FieldForm.createTextInput('Tên', 'name', 'Nhập tên'),\r\n      FieldForm.createTextInput('Giá trị', 'value', 'Nhập giá trị'),\r\n    ];\r\n  }\r\n\r\n  loaded(): void {\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/modules/customer/customer-edit/customer-edit.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/modules/customer/customer-list/customer-list.component.css\n// module id = ./src/app/modules/customer/customer-list/customer-list.component.css\n// module chunks = customer.module","module.exports = \"<div class=\\\"panel panel-default\\\">\\r\\n  <div class=\\\"panel-heading\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n        <form (ngSubmit)=\\\"load()\\\" [formGroup]=\\\"searchForm\\\">\\r\\n          <div *ngFor=\\\"let f of searchControls\\\" class=\\\"form-group col-md-6\\\">\\r\\n            <ng-template [ngIf]=\\\"f.type == 'input'\\\">\\r\\n              <label [for]=\\\"f.formControl\\\">\\r\\n                {{ f.label }}\\r\\n              </label>\\r\\n              <input [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\" [name]=\\\"f.formControl\\\"\\r\\n                [placeholder]=\\\"f.placeHolder\\\" [type]=\\\"f.typeof\\\" class=\\\"form-control\\\" />\\r\\n            </ng-template>\\r\\n            <ng-template [ngIf]=\\\"f.type == 'textarea'\\\">\\r\\n              <label [for]=\\\"f.formControl\\\">\\r\\n                {{ f.label }}\\r\\n              </label>\\r\\n              <textarea [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\" [name]=\\\"f.formControl\\\"\\r\\n                [placeholder]=\\\"f.placeHolder\\\" class=\\\"form-control\\\">\\r\\n              </textarea>\\r\\n            </ng-template>\\r\\n            <ng-template [ngIf]=\\\"f.type == 'checkbox'\\\">\\r\\n              <div class=\\\"checkbox\\\">\\r\\n                <label>\\r\\n                  <input [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\" [name]=\\\"f.formControl\\\"\\r\\n                    type=\\\"checkbox\\\" />\\r\\n                  {{ f.label }}\\r\\n                </label>\\r\\n              </div>\\r\\n            </ng-template>\\r\\n            <ng-template [ngIf]=\\\"f.type == 'select'\\\">\\r\\n              <label [for]=\\\"f.formControl\\\">\\r\\n                {{ f.label }}\\r\\n              </label>\\r\\n              <select [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\" [name]=\\\"f.formControl\\\"\\r\\n                class=\\\"form-control\\\">\\r\\n                <option *ngFor=\\\"let option of f.data\\\" [value]=\\\"option['value']\\\">\\r\\n                  {{ option[\\\"name\\\"] }}\\r\\n                </option>\\r\\n              </select>\\r\\n            </ng-template>\\r\\n            <ng-template [ngIf]=\\\"f.type == 'select2'\\\">\\r\\n              <label [for]=\\\"f.formControl\\\">\\r\\n                {{ f.label }}\\r\\n              </label>\\r\\n              <angular2-multiselect [data]=\\\"f.data\\\" [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\"\\r\\n                [settings]=\\\"f.config\\\">\\r\\n              </angular2-multiselect>\\r\\n            </ng-template>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <button class=\\\"btn btn-default\\\" type=\\\"submit\\\">Tìm kiếm</button>\\r\\n            <button (click)=\\\"removeFilter()\\\" class=\\\"btn btn-default\\\" type=\\\"button\\\">Xóa lọc</button>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <table class=\\\"table table-bordered table-hover\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th style=\\\"width: 10%;\\\">#</th>\\r\\n        <th style=\\\"width: 10%;\\\">Ảnh đại diện</th>\\r\\n        <th style=\\\"width: 15%;\\\">Tên đăng nhập</th>\\r\\n        <th style=\\\"width: 15%;\\\">Họ tên</th>\\r\\n        <th style=\\\"width: 10%;\\\">Số điện thoại</th>\\r\\n        <th style=\\\"width: 10%;\\\">Giới tính</th>\\r\\n        <th style=\\\"width: 10%;\\\">Ngày sinh</th>\\r\\n        <th style=\\\"width: 10%;\\\">Trạng thái</th>\\r\\n        <th style=\\\"width: 10%;\\\">Thao tác</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let item of list;let i = index\\\" class=\\\"odd\\\">\\r\\n        <td class=\\\"text-center\\\">{{i + 1}}</td>\\r\\n        <td class=\\\"text-center\\\">\\r\\n          <img [alt]=\\\"item.fullname\\\" [src]=\\\"item.avatar\\\" class=\\\"img-thumb\\\" width=\\\"100px\\\" />\\r\\n        </td>\\r\\n        <td>{{item.account.username}}</td>\\r\\n        <td>{{item.fullname}}</td>\\r\\n        <td class=\\\"text-center\\\">{{item.phone}}</td>\\r\\n        <td class=\\\"text-center\\\">\\r\\n          <span *ngIf=\\\"item.gender == 1\\\">Nam</span>\\r\\n          <span *ngIf=\\\"item.gender == 0\\\">Nữ</span>\\r\\n        </td>\\r\\n        <td class=\\\"text-center\\\">{{item.dob}}</td>\\r\\n        <td class=\\\"text-center\\\">\\r\\n          <ui-switch (change)=\\\"onStatusChange(item,i,$event)\\\" *ngIf=\\\"item.account.status == 0\\\"></ui-switch>\\r\\n          <ui-switch (change)=\\\"onStatusChange(item,i,$event)\\\" *ngIf=\\\"item.account.status == 1\\\"\\r\\n            [checked]=\\\"item.account.status\\\"></ui-switch>\\r\\n        </td>\\r\\n        <td class=\\\"text-center\\\">\\r\\n          <button (confirm)=\\\"remove(item, i)\\\" cancelText=\\\"No <i class='fa fa-remove'></i>\\\" class=\\\"btn btn-danger btn-sm\\\"\\r\\n            confirmText=\\\"Yes <i class='fa fa-check'></i>\\\" mwlConfirmationPopover placement=\\\"top\\\"\\r\\n            popoverMessage=\\\"Bạn thực sự muốn xóa?\\\" popoverTitle=\\\"Xóa\\\" style=\\\"width: 30px; height: 30px; padding: 0;\\\" type=\\\"button\\\">\\r\\n            <i aria-hidden=\\\"true\\\" class=\\\"fa fa-remove\\\"></i>\\r\\n          </button>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n  <div *ngIf=\\\"list.length > 0\\\" class=\\\"panel-footer\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-6\\\">\\r\\n        <pagination (numPages)=\\\"pagination.numPages = $event\\\" (pageChanged)=\\\"pageChanged($event)\\\"\\r\\n          [(ngModel)]=\\\"pagination.currentPage\\\" [boundaryLinks]=\\\"true\\\" [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\r\\n          [maxSize]=\\\"pagination.maxSize\\\" [totalItems]=\\\"pagination.totalItems\\\" class=\\\"pagination-sm\\\"></pagination>\\r\\n      </div>\\r\\n      <div class=\\\"col-xs-6\\\">\\r\\n        <div class=\\\"box-go-to\\\">\\r\\n          <input [(ngModel)]=\\\"nextPage\\\" class=\\\"col-xs-2\\\" type=\\\"number\\\">\\r\\n          <span class=\\\"col-xs-1\\\">/</span>\\r\\n          <input [(ngModel)]=\\\"pagination.numPages\\\" class=\\\"col-xs-2\\\" disabled type=\\\"text\\\">\\r\\n          <div class=\\\"col-xs-4\\\">\\r\\n            <button (click)=\\\"goToPageNumber()\\\">Đến</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/modules/customer/customer-list/customer-list.component.html\n// module id = ./src/app/modules/customer/customer-list/customer-list.component.html\n// module chunks = customer.module","import {Component} from '@angular/core';\r\nimport {AbstractCRUDComponent, AbstractModalComponent} from '../../../core/crud';\r\nimport {BsModalService, ModalOptions} from 'ngx-bootstrap';\r\nimport {FormBuilder, FormControl, FormGroup} from '@angular/forms';\r\nimport {CustomerMeta} from '../customer.meta';\r\nimport {CustomerService} from '../customer.service';\r\nimport {CustomerCreateComponent} from '../customer-create/customer-create.component';\r\nimport {CustomerEditComponent} from '../customer-edit/customer-edit.component';\r\nimport {FieldForm, ModalResult, ObjectUtil} from '../../../core';\r\n\r\n@Component({\r\n  selector: 'app-customer',\r\n  templateUrl: './customer-list.component.html',\r\n  styleUrls: ['./customer-list.component.css'],\r\n  providers: [CustomerService]\r\n})\r\nexport class CustomerListComponent extends AbstractCRUDComponent<CustomerMeta> {\r\n\r\n  constructor(\r\n    service: CustomerService,\r\n    modal: BsModalService,\r\n    builder: FormBuilder,\r\n  ) {\r\n    super(service, modal, builder);\r\n  }\r\n\r\n  onInit(): void {\r\n    this.load();\r\n  }\r\n\r\n  onDestroy(): void {\r\n  }\r\n\r\n  getTitle(): string {\r\n    return 'Quản lý khách hàng';\r\n  }\r\n\r\n  getCreateModalComponent(): any {\r\n    return CustomerCreateComponent;\r\n  }\r\n\r\n  getEditModalComponent(): any {\r\n    return CustomerEditComponent;\r\n  }\r\n\r\n  getCreateModalComponentOptions(): ModalOptions {\r\n    return null;\r\n  }\r\n\r\n  getEditModalComponentOptions(): ModalOptions {\r\n    return null;\r\n  }\r\n\r\n  buildSearchForm(): FormGroup {\r\n    return this.formBuilder.group({\r\n      search: new FormControl(null),\r\n      status: new FormControl(null),\r\n    });\r\n  }\r\n\r\n  initSearchForm(): FieldForm[] {\r\n    return [\r\n      FieldForm.createTextInput('Tìm kiếm theo tên', 'search', 'Nhập từ khóa'),\r\n      FieldForm.createSelect('Tìm kiếm trạng thái', 'status', 'Chọn một', [\r\n        {\r\n          name:'Hoạt động',\r\n          value: '1'\r\n        },\r\n        {\r\n          name:'Không hoạt động',\r\n          value: '0'\r\n        },\r\n      ]),\r\n    ];\r\n  }\r\n\r\n  initNewModel(): CustomerMeta {\r\n    return new CustomerMeta();\r\n  }\r\n\r\n  onStatusChange(item: CustomerMeta, index: number, enable: boolean) {\r\n    let methodAsync = null;\r\n    let titleMsg: string = 'Mở kích hoạt';\r\n    if (enable) {\r\n      methodAsync = this.service.enable(item.id);\r\n    } else {\r\n      methodAsync = this.service.disable(item.id);\r\n      titleMsg = 'Khóa kích hoạt';\r\n    }\r\n    methodAsync.subscribe((res: CustomerMeta) => {\r\n      this.service.toastSuccessfully(titleMsg);\r\n    }, () => this.service.toastFailed(titleMsg));\r\n    this.load();\r\n  }\r\n\r\n  createCustomer() {\r\n    let modalOptions = Object.assign(this.defaultModalOptions(), this.getCreateModalComponentOptions());\r\n    const config = ObjectUtil.combineValue({ignoreBackdropClick: true}, modalOptions);\r\n    const modalRef = this.modalService.show(this.getCreateModalComponent(), config);\r\n    let modal: AbstractModalComponent<CustomerMeta> = <AbstractModalComponent<CustomerMeta>>modalRef.content;\r\n    modal.setModel(this.initNewModel());\r\n    modal.onHidden.subscribe((result: ModalResult<CustomerMeta>) => {\r\n      if (result.success) {\r\n        this.load();\r\n      }\r\n    });\r\n  }\r\n\r\n  editCustomer(item) {\r\n    let modalOptions = Object.assign(this.defaultModalOptions(), this.getEditModalComponentOptions());\r\n    const config = ObjectUtil.combineValue({ignoreBackdropClick: true}, modalOptions);\r\n    const modalRef = this.modalService.show(this.getEditModalComponent(), config);\r\n    let modal: AbstractModalComponent<CustomerMeta> = <AbstractModalComponent<CustomerMeta>>modalRef.content;\r\n    modal.setModel(item);\r\n    modal.onHidden.subscribe((result: ModalResult<CustomerMeta>) => {\r\n      if (result.success) {\r\n        this.load();\r\n      }\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/modules/customer/customer-list/customer-list.component.ts","import {UserMeta} from '../user/user.meta';\r\n\r\nexport class CustomerMeta {\r\n  id: number;\r\n  user_id: number;\r\n  fullname: string;\r\n  phone: number;\r\n  avatar: string;\r\n  dob: string;\r\n  gender: boolean;\r\n  address: string;\r\n  province: string;\r\n  district: string;\r\n  ward: string;\r\n  account: UserMeta;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/modules/customer/customer.meta.ts","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {CustomerListComponent} from './customer-list/customer-list.component';\r\nimport {CustomerCreateComponent} from './customer-create/customer-create.component';\r\nimport {CustomerEditComponent} from './customer-edit/customer-edit.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {ModalModule, PaginationModule, PopoverModule} from 'ngx-bootstrap';\r\nimport {ConfirmationPopoverModule} from 'angular-confirmation-popover';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {NgSelectModule} from '@ng-select/ng-select';\r\nimport {CKEditorModule} from 'ng2-ckeditor';\r\nimport {AngularMultiSelectModule} from 'angular2-multiselect-dropdown';\r\nimport {UiSwitchModule} from 'ngx-toggle-switch';\r\n\r\nconst routing: Routes = [\r\n  {\r\n    path: '',\r\n    component: CustomerListComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    PaginationModule.forRoot(),\r\n    ReactiveFormsModule,\r\n    PopoverModule.forRoot(),\r\n    ConfirmationPopoverModule.forRoot(),\r\n    RouterModule.forChild(routing),\r\n    ModalModule.forRoot(),\r\n    NgSelectModule,\r\n    CKEditorModule,\r\n    UiSwitchModule,\r\n    AngularMultiSelectModule,\r\n  ],\r\n  declarations: [CustomerListComponent, CustomerCreateComponent, CustomerEditComponent],\r\n  entryComponents: [CustomerCreateComponent, CustomerEditComponent]\r\n})\r\nexport class CustomerModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/modules/customer/customer.module.ts"],"sourceRoot":"webpack:///"}