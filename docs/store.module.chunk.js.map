{"version":3,"sources":["./src/app/modules/store/store-create/store-create.component.css","./src/app/modules/store/store-create/store-create.component.html","./src/app/modules/store/store-create/store-create.component.ts","./src/app/modules/store/store-edit/store-edit.component.css","./src/app/modules/store/store-edit/store-edit.component.html","./src/app/modules/store/store-edit/store-edit.component.ts","./src/app/modules/store/store-list/store-list.component.css","./src/app/modules/store/store-list/store-list.component.html","./src/app/modules/store/store-list/store-list.component.ts","./src/app/modules/store/store.meta.ts","./src/app/modules/store/store.module.ts","./src/app/modules/store/store.service.ts"],"names":[],"mappings":"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","file":"store.module.chunk.js","sourcesContent":["module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/modules/store/store-create/store-create.component.css\n// module id = ./src/app/modules/store/store-create/store-create.component.css\n// module chunks = store.module","module.exports = \"<div class=\\\"modal-header bg-primary\\\">\\r\\n  <h4 class=\\\"modal-title pull-left\\\">Thêm mới thông tin</h4>\\r\\n  <button (click)=\\\"dismiss()\\\" aria-label=\\\"Close\\\" class=\\\"close pull-right\\\" type=\\\"button\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-12\\\">\\r\\n      <form [formGroup]=\\\"formGroup\\\" novalidate>\\r\\n        <div *ngFor=\\\"let f of fields\\\" [ngClass]=\\\"{'has-error':!formGroup.controls[f.formControl].valid}\\\"\\r\\n             class=\\\"form-group\\\">\\r\\n          <ng-template [ngIf]=\\\"f.type=='input'\\\">\\r\\n            <label [for]=\\\"f.formControl\\\">\\r\\n              {{f.label}} <span\\r\\n              *ngIf=\\\"f.typeof == 'number'\\\" style=\\\"font-weight: normal\\\">\\r\\n              ( {{formGroup.controls[f.formControl].value|number:'1.0-0'}} )\\r\\n            </span>\\r\\n            </label>\\r\\n            <input [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\" [name]=\\\"f.formControl\\\" [placeholder]=\\\"f.placeHolder\\\"\\r\\n                   [type]=\\\"f.typeof\\\" class=\\\"form-control\\\">\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]=\\\"f.type=='textarea'\\\">\\r\\n            <label [for]=\\\"f.formControl\\\">\\r\\n              {{f.label}}\\r\\n            </label>\\r\\n            <textarea [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\" [name]=\\\"f.formControl\\\" [placeholder]=\\\"f.placeHolder\\\"\\r\\n                      [rows]=\\\"5\\\" class=\\\"form-control\\\">\\r\\n          </textarea>\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]=\\\"f.type=='file'\\\">\\r\\n            <label [for]=\\\"f.formControl\\\">\\r\\n              {{f.label}}\\r\\n            </label>\\r\\n            <input (change)=\\\"f.config['onFileChange'](formGroup,f.formControl,$event)\\\" [id]=\\\"f.formControl\\\" [name]=\\\"f.formControl\\\"\\r\\n                   [placeholder]=\\\"f.placeHolder\\\" accept=\\\"{{f.config['accept']}}\\\"\\r\\n                   class=\\\"form-control\\\"\\r\\n                   type=\\\"file\\\">\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]=\\\"f.type=='checkbox'\\\">\\r\\n            <div class=\\\"checkbox\\\">\\r\\n              <label>\\r\\n                <input [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\" [name]=\\\"f.formControl\\\" type=\\\"checkbox\\\">\\r\\n                {{f.label}}\\r\\n              </label>\\r\\n            </div>\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]=\\\"f.type=='select'\\\">\\r\\n            <label [for]=\\\"f.formControl\\\">\\r\\n              {{f.label}}\\r\\n            </label>\\r\\n            <select [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\" class=\\\"form-control\\\">\\r\\n              <option *ngFor=\\\"let option of f.data\\\" [value]=\\\"option['id']\\\">{{option['name']}}</option>\\r\\n            </select>\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]=\\\"f.type=='select2'\\\">\\r\\n            <label [for]=\\\"f.formControl\\\">\\r\\n              {{f.label}}\\r\\n            </label>\\r\\n            <angular2-multiselect [data]=\\\"f.data\\\" [formControlName]=\\\"f.formControl\\\"\\r\\n                                  [id]=\\\"f.formControl\\\" [settings]=\\\"f.config\\\">\\r\\n            </angular2-multiselect>\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]=\\\"f.type=='html'\\\">\\r\\n            <label [for]=\\\"f.formControl\\\">\\r\\n              {{f.label}}\\r\\n            </label>\\r\\n            <ckeditor [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\"\\r\\n                      debounce=\\\"500\\\">\\r\\n            </ckeditor>\\r\\n          </ng-template>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n  <button (click)=\\\"create()\\\" [disabled]=\\\"!formGroup.valid\\\" class=\\\"btn btn-primary\\\" type=\\\"button\\\">Thêm mới</button>\\r\\n  <button (click)=\\\"dismiss()\\\" class=\\\"btn btn-default\\\" type=\\\"button\\\">Hủy bỏ</button>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/modules/store/store-create/store-create.component.html\n// module id = ./src/app/modules/store/store-create/store-create.component.html\n// module chunks = store.module","import {Component} from '@angular/core';\r\nimport {AbstractModalComponent} from '../../../core/crud';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {BsModalRef} from 'ngx-bootstrap';\r\nimport {StoreService} from '../store.service';\r\nimport {StoreMeta} from '../store.meta';\r\nimport {FieldForm} from '../../../core/common';\r\n\r\n@Component({\r\n  selector: 'app-store-create',\r\n  templateUrl: './store-create.component.html',\r\n  styleUrls: ['./store-create.component.css'],\r\n  providers: [StoreService]\r\n})\r\nexport class StoreCreateComponent extends AbstractModalComponent<StoreMeta> {\r\n\r\n  constructor(\r\n    service: StoreService,\r\n    modal: BsModalRef,\r\n    builder: FormBuilder\r\n  ) {\r\n    super(service, modal, builder);\r\n  }\r\n\r\n  onInit(): void {\r\n  }\r\n\r\n  onDestroy(): void {\r\n  }\r\n\r\n  buildForm(): FormGroup {\r\n    return this.formBuilder.group({\r\n      name: new FormControl(null, [Validators.required, Validators.maxLength(255), Validators.pattern('[^ ].*$')]),\r\n      value: new FormControl(null, [Validators.required, Validators.pattern('[^ ].*$')]),\r\n    });\r\n  }\r\n\r\n  initFieldForm(): FieldForm[] {\r\n    return [\r\n      FieldForm.createTextInput('Tên', 'name', 'Nhập ký tự'),\r\n      FieldForm.createTextArea('Giá trị', 'value', 'Nhập ký tự'),\r\n    ];\r\n  }\r\n\r\n  loaded(): void {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/modules/store/store-create/store-create.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/modules/store/store-edit/store-edit.component.css\n// module id = ./src/app/modules/store/store-edit/store-edit.component.css\n// module chunks = store.module","module.exports = \"<div class=\\\"modal-header bg-primary\\\">\\r\\n  <h4 class=\\\"modal-title pull-left\\\">Chỉnh sửa thông tin</h4>\\r\\n  <button (click)=\\\"dismiss()\\\" aria-label=\\\"Close\\\" class=\\\"close pull-right\\\" type=\\\"button\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-12\\\">\\r\\n      <form [formGroup]=\\\"formGroup\\\" novalidate>\\r\\n        <div *ngFor=\\\"let f of fields\\\" [ngClass]=\\\"{'has-error':!formGroup.controls[f.formControl].valid}\\\"\\r\\n             class=\\\"form-group\\\">\\r\\n          <ng-template [ngIf]=\\\"f.type=='input'\\\">\\r\\n            <label [for]=\\\"f.formControl\\\">\\r\\n              {{f.label}} <span\\r\\n              *ngIf=\\\"f.typeof == 'number'\\\" style=\\\"font-weight: normal\\\">\\r\\n              ( {{formGroup.controls[f.formControl].value|number:'1.0-0'}} )\\r\\n            </span>\\r\\n            </label>\\r\\n            <input [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\" [name]=\\\"f.formControl\\\" [placeholder]=\\\"f.placeHolder\\\"\\r\\n                   [type]=\\\"f.typeof\\\" class=\\\"form-control\\\">\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]=\\\"f.type=='textarea'\\\">\\r\\n            <label [for]=\\\"f.formControl\\\">\\r\\n              {{f.label}}\\r\\n            </label>\\r\\n            <textarea [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\" [name]=\\\"f.formControl\\\" [placeholder]=\\\"f.placeHolder\\\"\\r\\n                      [rows]=\\\"5\\\" class=\\\"form-control\\\">\\r\\n          </textarea>\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]=\\\"f.type=='file'\\\">\\r\\n            <label [for]=\\\"f.formControl\\\">\\r\\n              {{f.label}}\\r\\n            </label>\\r\\n            <input (change)=\\\"f.config['onFileChange'](formGroup,f.formControl,$event)\\\" [id]=\\\"f.formControl\\\" [name]=\\\"f.formControl\\\"\\r\\n                   [placeholder]=\\\"f.placeHolder\\\" accept=\\\"{{f.config['accept']}}\\\"\\r\\n                   class=\\\"form-control\\\"\\r\\n                   type=\\\"file\\\">\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]=\\\"f.type=='checkbox'\\\">\\r\\n            <div class=\\\"checkbox\\\">\\r\\n              <label>\\r\\n                <input [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\" [name]=\\\"f.formControl\\\" type=\\\"checkbox\\\">\\r\\n                {{f.label}}\\r\\n              </label>\\r\\n            </div>\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]=\\\"f.type=='select'\\\">\\r\\n            <label [for]=\\\"f.formControl\\\">\\r\\n              {{f.label}}\\r\\n            </label>\\r\\n            <select [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\" class=\\\"form-control\\\">\\r\\n              <option *ngFor=\\\"let option of f.data\\\" [value]=\\\"option['id']\\\">{{option['name']}}</option>\\r\\n            </select>\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]=\\\"f.type=='select2'\\\">\\r\\n            <label [for]=\\\"f.formControl\\\">\\r\\n              {{f.label}}\\r\\n            </label>\\r\\n            <angular2-multiselect [data]=\\\"f.data\\\" [formControlName]=\\\"f.formControl\\\"\\r\\n                                  [id]=\\\"f.formControl\\\" [settings]=\\\"f.config\\\">\\r\\n            </angular2-multiselect>\\r\\n          </ng-template>\\r\\n          <ng-template [ngIf]=\\\"f.type=='html'\\\">\\r\\n            <label [for]=\\\"f.formControl\\\">\\r\\n              {{f.label}}\\r\\n            </label>\\r\\n            <ckeditor [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\"\\r\\n                      debounce=\\\"500\\\">\\r\\n            </ckeditor>\\r\\n          </ng-template>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n  <button (click)=\\\"edit()\\\" [disabled]=\\\"!formGroup.valid\\\" class=\\\"btn btn-primary\\\" type=\\\"button\\\">Chỉnh sửa</button>\\r\\n  <button (click)=\\\"dismiss()\\\" class=\\\"btn btn-default\\\" type=\\\"button\\\">Hủy bỏ</button>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/modules/store/store-edit/store-edit.component.html\n// module id = ./src/app/modules/store/store-edit/store-edit.component.html\n// module chunks = store.module","import {Component} from '@angular/core';\r\nimport {AbstractModalComponent} from '../../../core/crud';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {BsModalRef} from 'ngx-bootstrap';\r\nimport {StoreMeta} from '../store.meta';\r\nimport {StoreService} from '../store.service';\r\nimport {FieldForm} from '../../../core/common';\r\n\r\n@Component({\r\n  selector: 'app-store-edit',\r\n  templateUrl: './store-edit.component.html',\r\n  styleUrls: ['./store-edit.component.css'],\r\n  providers: [StoreService]\r\n})\r\nexport class StoreEditComponent extends AbstractModalComponent<StoreMeta> {\r\n\r\n  constructor(\r\n    service: StoreService,\r\n    modal: BsModalRef,\r\n    builder: FormBuilder\r\n  ) {\r\n    super(service, modal, builder);\r\n  }\r\n\r\n  onInit(): void {\r\n  }\r\n\r\n  onDestroy(): void {\r\n  }\r\n\r\n  buildForm(): FormGroup {\r\n    return this.formBuilder.group({\r\n      name: new FormControl(null, [Validators.required, Validators.maxLength(255), Validators.pattern('[^ ].*$')]),\r\n      value: new FormControl(null, [Validators.required, Validators.pattern('[^ ].*$')]),\r\n    });\r\n  }\r\n\r\n  initFieldForm(): FieldForm[] {\r\n    return [\r\n      FieldForm.createTextInput('Tên', 'name', 'Nhập tên'),\r\n      FieldForm.createTextArea('Giá trị', 'value', 'Nhập giá trị'),\r\n    ];\r\n  }\r\n\r\n  loaded(): void {\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/modules/store/store-edit/store-edit.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/modules/store/store-list/store-list.component.css\n// module id = ./src/app/modules/store/store-list/store-list.component.css\n// module chunks = store.module","module.exports = \"<div class=\\\"panel panel-default\\\">\\r\\n  <div class=\\\"panel-heading\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n        <form (ngSubmit)=\\\"load()\\\" [formGroup]=\\\"searchForm\\\">\\r\\n          <div *ngFor=\\\"let f of searchControls\\\" class=\\\"form-group col-md-6\\\">\\r\\n            <ng-template [ngIf]=\\\"f.type == 'input'\\\">\\r\\n              <label [for]=\\\"f.formControl\\\">\\r\\n                {{ f.label }}\\r\\n              </label>\\r\\n              <input [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\" [name]=\\\"f.formControl\\\" [placeholder]=\\\"f.placeHolder\\\"\\r\\n                     [type]=\\\"f.typeof\\\" class=\\\"form-control\\\"/>\\r\\n            </ng-template>\\r\\n            <ng-template [ngIf]=\\\"f.type == 'textarea'\\\">\\r\\n              <label [for]=\\\"f.formControl\\\">\\r\\n                {{ f.label }}\\r\\n              </label>\\r\\n              <textarea [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\" [name]=\\\"f.formControl\\\"\\r\\n                        [placeholder]=\\\"f.placeHolder\\\" class=\\\"form-control\\\">\\r\\n              </textarea>\\r\\n            </ng-template>\\r\\n            <ng-template [ngIf]=\\\"f.type == 'checkbox'\\\">\\r\\n              <div class=\\\"checkbox\\\">\\r\\n                <label>\\r\\n                  <input [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\" [name]=\\\"f.formControl\\\"\\r\\n                         type=\\\"checkbox\\\"/>\\r\\n                  {{ f.label }}\\r\\n                </label>\\r\\n              </div>\\r\\n            </ng-template>\\r\\n            <ng-template [ngIf]=\\\"f.type == 'select'\\\">\\r\\n              <label [for]=\\\"f.formControl\\\">\\r\\n                {{ f.label }}\\r\\n              </label>\\r\\n              <select [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\" [name]=\\\"f.formControl\\\"\\r\\n                      class=\\\"form-control\\\">\\r\\n                <option *ngFor=\\\"let option of f.data\\\" [value]=\\\"option['id']\\\">\\r\\n                  {{ option[\\\"name\\\"] }}\\r\\n                </option>\\r\\n              </select>\\r\\n            </ng-template>\\r\\n            <ng-template [ngIf]=\\\"f.type == 'select2'\\\">\\r\\n              <label [for]=\\\"f.formControl\\\">\\r\\n                {{ f.label }}\\r\\n              </label>\\r\\n              <angular2-multiselect [data]=\\\"f.data\\\" [formControlName]=\\\"f.formControl\\\" [id]=\\\"f.formControl\\\"\\r\\n                                    [settings]=\\\"f.config\\\">\\r\\n              </angular2-multiselect>\\r\\n            </ng-template>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <button class=\\\"btn btn-default\\\" type=\\\"submit\\\">Tìm kiếm</button>\\r\\n            <button (click)=\\\"removeFilter()\\\" class=\\\"btn btn-default\\\" type=\\\"button\\\">Xóa lọc</button>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"col-xs-6 col-xs-offset-6\\\">\\r\\n        <button (click)=\\\"createStore()\\\" class=\\\"btn btn-primary pull-right\\\" type=\\\"button\\\">\\r\\n          <i class=\\\"fa fa-plus\\\"></i> Thêm mới\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <table class=\\\"table table-bordered table-hover\\\">\\r\\n    <thead>\\r\\n    <tr>\\r\\n      <th style=\\\"width: 10%;\\\">#</th>\\r\\n      <th style=\\\"width: 30%;\\\">Tên</th>\\r\\n      <th style=\\\"width: 50%;\\\">Giá trị</th>\\r\\n      <th style=\\\"width: 10%;\\\">Thao tác</th>\\r\\n    </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n    <tr *ngFor=\\\"let item of list;let i = index\\\" class=\\\"odd\\\">\\r\\n      <td class=\\\"text-center\\\">{{i + 1}}</td>\\r\\n      <td>{{item.name}}</td>\\r\\n      <td>{{item.value}}</td>\\r\\n      <td class=\\\"text-center\\\">\\r\\n        <button (click)=\\\"editStore(item)\\\" class=\\\"btn btn-default btn-sm\\\" type=\\\"button\\\" style=\\\"width: 30px; height: 30px; padding: 0;\\\">\\r\\n          <i class=\\\"fa fa-pencil-square-o\\\"></i>\\r\\n        </button>\\r\\n        <button (confirm)=\\\"remove(item,i)\\\" cancelText=\\\"No <i class='fa fa-remove'></i>\\\" class=\\\"btn btn-danger btn-sm\\\"\\r\\n                confirmText=\\\"Yes <i class='fa fa-check'></i>\\\"\\r\\n                mwlConfirmationPopover\\r\\n                placement=\\\"top\\\" popoverMessage=\\\"Bạn thực sự muốn xóa?\\\"\\r\\n                popoverTitle=\\\"Xóa\\\" type=\\\"button\\\" style=\\\"width: 30px; height: 30px; padding: 0;\\\">\\r\\n          <i class=\\\"fa fa-remove\\\"></i>\\r\\n        </button>\\r\\n      </td>\\r\\n    </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n  <div *ngIf=\\\"list.length > 0\\\" class=\\\"panel-footer\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-6\\\">\\r\\n        <pagination (numPages)=\\\"pagination.numPages = $event\\\" (pageChanged)=\\\"pageChanged($event)\\\"\\r\\n                    [(ngModel)]=\\\"pagination.currentPage\\\" [boundaryLinks]=\\\"true\\\"\\r\\n                    [itemsPerPage]=\\\"pagination.itemsPerPage\\\" [maxSize]=\\\"pagination.maxSize\\\" [totalItems]=\\\"pagination.totalItems\\\"\\r\\n                    class=\\\"pagination-sm\\\"></pagination>\\r\\n      </div>\\r\\n      <div class=\\\"col-xs-6\\\">\\r\\n        <div class=\\\"box-go-to\\\">\\r\\n          <input [(ngModel)]=\\\"nextPage\\\" class=\\\"col-xs-2\\\" type=\\\"number\\\">\\r\\n          <span class=\\\"col-xs-1\\\">/</span>\\r\\n          <input [(ngModel)]=\\\"pagination.numPages\\\" class=\\\"col-xs-2\\\" disabled type=\\\"text\\\">\\r\\n          <div class=\\\"col-xs-4\\\">\\r\\n            <button (click)=\\\"goToPageNumber()\\\">Đến</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/modules/store/store-list/store-list.component.html\n// module id = ./src/app/modules/store/store-list/store-list.component.html\n// module chunks = store.module","import {Component} from '@angular/core';\r\nimport {AbstractCRUDComponent, AbstractModalComponent} from '../../../core/crud';\r\nimport {BsModalService, ModalOptions} from 'ngx-bootstrap';\r\nimport {FormBuilder, FormControl, FormGroup} from '@angular/forms';\r\nimport {StoreMeta} from '../store.meta';\r\nimport {StoreService} from '../store.service';\r\nimport {StoreCreateComponent} from '../store-create/store-create.component';\r\nimport {StoreEditComponent} from '../store-edit/store-edit.component';\r\nimport {FieldForm, ModalResult, ObjectUtil} from '../../../core';\r\n\r\n@Component({\r\n  selector: 'app-store',\r\n  templateUrl: './store-list.component.html',\r\n  styleUrls: ['./store-list.component.css'],\r\n  providers: [StoreService]\r\n})\r\nexport class StoreListComponent extends AbstractCRUDComponent<StoreMeta> {\r\n\r\n  constructor(\r\n    service: StoreService,\r\n    modal: BsModalService,\r\n    builder: FormBuilder,\r\n  ) {\r\n    super(service, modal, builder);\r\n  }\r\n\r\n  onInit(): void {\r\n    this.load();\r\n  }\r\n\r\n  onDestroy(): void {\r\n  }\r\n\r\n  getTitle(): string {\r\n    return 'Quản lý thông tin cửa hàng';\r\n  }\r\n\r\n  getCreateModalComponent(): any {\r\n    return StoreCreateComponent;\r\n  }\r\n\r\n  getEditModalComponent(): any {\r\n    return StoreEditComponent;\r\n  }\r\n\r\n  getCreateModalComponentOptions(): ModalOptions {\r\n    return null;\r\n  }\r\n\r\n  getEditModalComponentOptions(): ModalOptions {\r\n    return null;\r\n  }\r\n\r\n  buildSearchForm(): FormGroup {\r\n    return this.formBuilder.group({\r\n      search: new FormControl(null),\r\n    });\r\n  }\r\n\r\n  initSearchForm(): FieldForm[] {\r\n    return [\r\n      FieldForm.createTextInput('Tìm kiếm theo tên', 'search', 'Nhập từ khóa'),\r\n    ];\r\n  }\r\n\r\n  initNewModel(): StoreMeta {\r\n    return new StoreMeta();\r\n  }\r\n\r\n  createStore() {\r\n    let modalOptions = Object.assign(this.defaultModalOptions(), this.getCreateModalComponentOptions());\r\n    const config = ObjectUtil.combineValue({ignoreBackdropClick: true}, modalOptions);\r\n    const modalRef = this.modalService.show(this.getCreateModalComponent(), config);\r\n    let modal: AbstractModalComponent<StoreMeta> = <AbstractModalComponent<StoreMeta>>modalRef.content;\r\n    modal.setModel(this.initNewModel());\r\n    modal.onHidden.subscribe((result: ModalResult<StoreMeta>) => {\r\n      if (result.success) {\r\n        this.load();\r\n      }\r\n    });\r\n  }\r\n\r\n  editStore(item) {\r\n    let modalOptions = Object.assign(this.defaultModalOptions(), this.getEditModalComponentOptions());\r\n    const config = ObjectUtil.combineValue({ignoreBackdropClick: true}, modalOptions);\r\n    const modalRef = this.modalService.show(this.getEditModalComponent(), config);\r\n    let modal: AbstractModalComponent<StoreMeta> = <AbstractModalComponent<StoreMeta>>modalRef.content;\r\n    modal.setModel(item);\r\n    modal.onHidden.subscribe((result: ModalResult<StoreMeta>) => {\r\n      if (result.success) {\r\n        this.load();\r\n      }\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/modules/store/store-list/store-list.component.ts","export class StoreMeta {\r\n  id: number;\r\n  name: string;\r\n  value: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/modules/store/store.meta.ts","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {StoreListComponent} from './store-list/store-list.component';\r\nimport {StoreCreateComponent} from './store-create/store-create.component';\r\nimport {StoreEditComponent} from './store-edit/store-edit.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {ModalModule, PaginationModule, PopoverModule} from 'ngx-bootstrap';\r\nimport {ConfirmationPopoverModule} from 'angular-confirmation-popover';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {NgSelectModule} from '@ng-select/ng-select';\r\nimport {CKEditorModule} from 'ng2-ckeditor';\r\nimport {AngularMultiSelectModule} from 'angular2-multiselect-dropdown';\r\n\r\nconst routing: Routes = [\r\n  {\r\n    path: '',\r\n    component: StoreListComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    PaginationModule.forRoot(),\r\n    ReactiveFormsModule,\r\n    PopoverModule.forRoot(),\r\n    ConfirmationPopoverModule.forRoot(),\r\n    RouterModule.forChild(routing),\r\n    ModalModule.forRoot(),\r\n    NgSelectModule,\r\n    CKEditorModule,\r\n    AngularMultiSelectModule,\r\n  ],\r\n  declarations: [StoreListComponent, StoreCreateComponent, StoreEditComponent],\r\n  entryComponents: [StoreCreateComponent, StoreEditComponent]\r\n})\r\nexport class StoreModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/modules/store/store.module.ts","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {AbstractCRUDService} from '../../core/crud';\r\nimport {ToasterService} from 'angular2-toaster';\r\nimport {TitleService} from '../../core/services';\r\nimport {StoreMeta} from './store.meta';\r\n\r\n@Injectable()\r\nexport class StoreService extends AbstractCRUDService<StoreMeta> {\r\n\r\n  constructor(http: HttpClient, toaster: ToasterService, title: TitleService) {\r\n    super(http, title, toaster, 'thông tin cửa hàng', 'stores');\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/modules/store/store.service.ts"],"sourceRoot":"webpack:///"}